import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class atividadeString
{
    public static void main(String[] args)
    { 
        Scanner leitor = new Scanner(System.in);
        System.out.print(" Digite uma frase: ");
        String frase = leitor.nextLine();
        
        // Saída dos Resultados
        System.out.println("Número total de caracteres: " + contarCaracteres(frase));
        System.out.println("Número de palavras: " + contarPalavras(frase));
        System.out.println("Número de vogais: " + contarVogais(frase) );
        System.out.println("A frase é palíndromo: " + (ehPalindromo(frase) ? "Sim" : "Não"));
        System.out.println("Frase sem dígitos: \"" + removerDigitos(frase) + "\"");
        leitor.close ();
    }
// Método para contar caracteres 
public static int contarCaracteres (String frase)
{
    return frase. length ();
}
// Método para contar palavras 
public static int contarPalavras(String frase)
{
String[] palavras = frase.trim() .split("\\s+") ;
return palavras. length;
}
// Método para contar vogais 
public static int contarVogais (String frase)
{
int contador = 0;
frase = frase.toLowerCase (); // Ignora maiúsculas/minúsculas 
for (char c : frase.toCharArray ())
{
    if ("aeiouáéíóúãõ".indexOf(c) != -1)
    {
       contador++; 
    }
}
return contador;
}
//Método para verificar se a frase é um palíndromo
public static boolean ehPalindromo(String frase)
{
    //Remove não-letras e coverte em minúsculas
    String fraseLimpa = frase. replaceAll ("[^a-zA-Z]", "").toLowerCase () ;
    int n = fraseLimpa. length () ;
    for (int i = 0; i < n / 2; i++)
    {
        if (fraseLimpa. charAt (i) != fraseLimpa. charAt (n - 1 - i))
        {
           return false; // Não é um palíndromo 
        }
    }
    return true; // É um palíndromo
}
// Método para remover dígitos
public static String removerDigitos(String frase)
{
  return frase.replaceAll("[0-9]", "") ;  
}
}
